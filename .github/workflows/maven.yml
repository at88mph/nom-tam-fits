# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Maven Build

on: [ push, pull_request ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        path: nom-tam-fits
        
    - name: Check out blackbox images 
      uses: actions/checkout@v2
      with:
        repository: nom-tam-fits/blackbox-images
        path: blackbox-images
        
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
        
    - name: Build with Maven
      run: mvn -B test jacoco:report --file pom.xml
      working-directory: ./nom-tam-fits
      
    - name: Generate JaCoCo badge
      id: jacoco
      uses: cicirello/jacoco-badge-generator@v2
      with:
        jacoco-csv-file: ./nom-tam-fits/target/site/jacoco/jacoco.csv
        badges-directory: ./nom-tam-fits/.github/badges
        on-missing-report: fail
        fail-if-coverage-less-than: 98
        fail-on-coverage-decrease: true

    - name: Log coverage percentage
      run: |
        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
        echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"
        
    - name: Commit the badge
      run: |
        cd nom-tam-fits
        if [[ `git status --porcelain` ]]; then
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'nom-tam-fits@users.noreply.github.com'
          git add -A
          git commit -m "Autogenerated JaCoCo coverage badge"
          git push
        fi
        cd ..
        
#    - name: Upload JaCoCo coverage report
#      uses: actions/upload-artifact@v2
#      with:
#        name: jacoco-report
#       path: ./nom-tam-fits/target/site/jacoco/

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
#        token: ${{ secrets.CODECOV_TOKEN }}
        working-directory: ./nom-tam-fits
        files: ./target/site/jacoco/jacoco.xml
        fail_ci_if_error: false
        flags: unittests
        name: codecov
        verbose: true
